# -*- coding: utf-8 -*-
"""2DL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B82Z8F4GCtbCQMUuMhDq9ByAQH1q95OB
"""

import torch
import fastai

import fastai 
fastai.__version__

torch.__version__

#!git clone http://github.com/EscVM/OIDv4_ToolKit.git
!cd OIDv4_ToolKit && pip install -r requirements.txt

!cd OIDv4_ToolKit && python main.py -h

!cd OIDv4_ToolKit && python3 main.py downloader --Dataset /content --classes Car Airplane Boat --type_csv train --limit 200



"""## BUILDING MODEL"""

from fastai.vision.all import *
from ipywidgets import widgets

#path
path=Path('train')
#fls=get_image_files(path)
#failed=verify_images(path)
# DAtablock create
transports=DataBlock(
    blocks=(ImageBlock,CategoryBlock),
    get_items=get_image_files,
    splitter=RandomSplitter(valid_pct=0.2,seed=42),
    get_y=parent_label,
    item_tfms=Resize(224)
)
#dataloaders
dls=transports.dataloaders(path)
#datasetni tekshirish
#dls.train.show_batch(max_n=32,nrows=4)
#O'qitish (TRAIN)
learn=cnn_learner(dls,resnet34,metrics=accuracy)
learn.fine_tune(4)

# tekshirish
interp=ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

interp.plot_top_losses(5,nrows=1)

from ipywidgets import widgets
upload=widgets.FileUpload()
upload

img=PILImage.create(upload.data[-1])
pred, pred_id, probs=learn.predict(img)
print(f"BAshorat:{pred}")
print(f"Ehtimollik:{probs[pred_id]*100:.1f}%")
img

learn.export('transport_model.pkl')

model=load_learner("/content/transport_model.pkl")

model.predict(img)

